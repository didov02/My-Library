<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Your Library</title>
    <style>
        .book-card {
            border: 1px solid #ccc;
            padding: 10px;
            margin: 10px;
            border-radius: 5px;
        }
        .book-card h3 {
            margin: 0;
        }
        .remove-btn {
            background-color: red;
            color: white;
            border: none;
            padding: 5px 10px;
            border-radius: 3px;
            cursor: pointer;
        }
        .status-select {
            margin-top: 5px;
        }
    </style>
</head>
<body>

<h1>Your Library</h1>

<% if (libraryBooks.length > 0) { %>
    <% libraryBooks.forEach(book => { %>
        <div class="book-card">
            <h3><%= book.title %> by <%= book.author %></h3>
            <p><strong>Genre:</strong> <%= book.genre %></p>
            <p><strong>Published:</strong> <%= book.year_of_publication %></p>
            <p><strong>Status:</strong> <%= book.status %></p>

            <!-- Dropdown for updating book status -->
            <select class="status-select" onchange="updateBookStatus('<%= book.id %>', this.value)">
                <option value="want_to_read" <%= book.status === 'want_to_read' ? 'selected' : '' %>>Want to Read</option>
                <option value="currently_reading" <%= book.status === 'currently_reading' ? 'selected' : '' %>>Currently Reading</option>
                <option value="read" <%= book.status === 'read' ? 'selected' : '' %>>Read</option>
            </select>

            <!-- Button for removing a book -->
            <button class="remove-btn" onclick="removeBook('<%= book.id %>')">Remove from Library</button>
        </div>
    <% }) %>
<% } else { %>
    <p>Your library is empty!</p>
<% } %>

<script>
    async function updateBookStatus(bookId, status) {
        try {
            const response = await fetch('/library/status', {
                method: 'PUT',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ bookId, status }),
            });

            const data = await response.json();
            if (response.ok) {
                alert('Book status updated successfully!');
                location.reload(); // Reload to reflect the new status
            } else {
                alert('Error updating book status: ' + data.error);
            }
        } catch (err) {
            alert('Failed to update book status: ' + err.message);
        }
    }

    async function removeBook(bookId) {
        try {
            const response = await fetch(`/library/${bookId}`, {
                method: 'DELETE',
            });

            const data = await response.json();
            if (response.ok) {
                alert('Book removed from library');
                location.reload(); // Reload to reflect the removed book
            } else {
                alert('Error removing book: ' + data.error);
            }
        } catch (err) {
            alert('Failed to remove book: ' + err.message);
        }
    }
</script>

</body>
</html>
